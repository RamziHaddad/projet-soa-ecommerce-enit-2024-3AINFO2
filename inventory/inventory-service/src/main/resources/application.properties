quarkus.http.port=8083

# datasource configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=azerty
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5435/db_inventory
quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.log.sql=true
quarkus.transaction-manager.enable-default-transaction=true

# Configurer l'envoi de messages Kafka


kafka.bootstrap.servers=localhost:9092
mp.messaging.outgoing.product-events.connector=smallrye-kafka
mp.messaging.outgoing.product-events.topic=product-events
#mp.messaging.outgoing.product-events.bootstrap.servers=kafka:9092
mp.messaging.outgoing.product-events.value.serializer=org.apache.kafka.common.serialization.StringSerializer

# config for topic product-disponibility to the catalog service
mp.messaging.outgoing.product-disponibility.connector=smallrye-kafka
mp.messaging.outgoing.product-disponibility.topic=product-disponibility
#mp.messaging.outgoing.product-disponibility.bootstrap.servers=kafka:9092
mp.messaging.outgoing.product-disponibility.value.serializer=org.apache.kafka.common.serialization.StringSerializer

#Config reception de messages kafka

mp.messaging.incoming.order-creation.connector=smallrye-kafka
mp.messaging.incoming.order-creation.topic=product-events
mp.messaging.incoming.order-creation.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer


mp.messaging.incoming.order-status.connector=smallrye-kafka
mp.messaging.incoming.order-status.topic=product-events
mp.messaging.incoming.order-status.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer