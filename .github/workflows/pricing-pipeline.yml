name: CI/CD Pipeline

on:
  push:
    branches:
      - Pricing
  pull_request:
    branches:
      - Pricing

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: |
          cd pricing/
          mvn clean package -DskipTests

      - name: Archive JAR Artifact
        uses: actions/upload-artifact@v3
        with:
          name: service-pricing.jar
          path: pricing/target/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 30

    steps:
      - name: Install sshpass
        run: sudo apt-get install -y sshpass

      - name: Download JAR Artifact
        uses: actions/download-artifact@v3
        with:
          name: service-pricing.jar
          path: ./

      - name: Verify if the correct JAR file exists
        run: |
          ls target/service-pricing-*.jar || (echo "JAR file not found!" && exit 1)

      - name: Add Server to Known Hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.DEPLOYMENT_MACHINE_IP }} >> ~/.ssh/known_hosts

      - name: Transfer JAR to VPS
        run: |
          sshpass -p "${{ secrets.DEPLOYMENT_MACHINE_USER_PSW }}" scp ./target/service-pricing-*.jar \
          ${{ secrets.DEPLOYMENT_MACHINE_USER }}@${{ secrets.DEPLOYMENT_MACHINE_IP }}:~/pricing/service-pricing.jar

      - name: Verify if the JAR file exists on the VPS
        run: |
          sshpass -p "${{ secrets.DEPLOYMENT_MACHINE_USER_PSW }}" ssh ${{ secrets.DEPLOYMENT_MACHINE_USER }}@${{ secrets.DEPLOYMENT_MACHINE_IP }} \
          "ls -l ~/pricing/service-pricing.jar"

      - name: Show system resources usage after file transfer
        run: |
          sshpass -p "${{ secrets.DEPLOYMENT_MACHINE_USER_PSW }}" ssh ${{ secrets.DEPLOYMENT_MACHINE_USER }}@${{ secrets.DEPLOYMENT_MACHINE_IP }} \
          "df -h && free -h && top -bn1 | grep 'Cpu(s)'"

      - name: Deploy JAR to VPS
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{ secrets.DEPLOYMENT_MACHINE_IP }}
          username: ${{ secrets.DEPLOYMENT_MACHINE_USER }}
          password: ${{ secrets.DEPLOYMENT_MACHINE_USER_PSW }}
          script: |
            sleep 10

            echo "Starting Spring Boot service..."
            cd ~/pricing
            nohup java -jar service-pricing.jar --server.port=8086 > service-pricing.log 2>&1 &
            echo "Spring Boot service deployed successfully!"

            sleep 30

            echo "Performing health check..."
            curl -X 'GET' 'http://localhost:8089/actuator/health' -H 'accept: application/json' || (echo "Service health check failed!" && exit 1)

            echo "Service deployed and healthy!"
            
            tail -n 50 ~/pricing/service-pricing.log

 
