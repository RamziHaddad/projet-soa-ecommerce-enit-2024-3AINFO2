# HTTP and Database Configurations
quarkus.http.port=8082

quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=azerty
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5434/db_catalog
# Drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation=update

%dev.quarkus.hibernate-orm.log.sql=true
%dev.quarkus.hibernate-orm.log.format-sql=true
%dev.quarkus.hibernate-orm.statistics=true

# HTTP limits
quarkus.http.limits.max-form-attribute-size=4M

# REST Client APIs
quarkus.rest-client.pricing-api.url=http://localhost:8086
quarkus.rest-client.pricing-api.scope=javax.inject.Singleton
quarkus.http.access-log.enabled=true

# Kafka Configuration for Producer (Used in production)
%prod.kafka.bootstrap.servers=kafka:9092

# Kafka configuration for outgoing messages (Producer)
mp.messaging.outgoing.products-out.connector=smallrye-kafka
mp.messaging.outgoing.products-out.topic=products-listed
mp.messaging.outgoing.products-updated.connector=smallrye-kafka
mp.messaging.outgoing.products-updated.topic=products-updated

#mp.messaging.outgoing.products-out.topic=products-updated
#testing 
mp.messaging.incoming.products-in.connector=smallrye-kafka
mp.messaging.incoming.products-in.topic=products-listed

# Kafka configuration for incoming messages (Consumer for testing)
# mp.messaging.incoming.products-in.connector=smallrye-kafka
# mp.messaging.incoming.products-in.topic=products-created
#  mp.messaging.incoming.products-in.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer
#  mp.messaging.incoming.products-in.group.id=products-consumer-group



